from aiogram.types import ReplyKeyboardMarkup, KeyboardButton  # pip install aiogram

from aiogram import Dispatcher, Bot, executor, types

from aiogram.types.web_app_info import WebAppInfo

from random import randint, choice

from string import ascii_letters, digits, punctuation


API_TOKEN = "6507610313:AAF-hsgN_ds5G3Us7aCMo_3bhw06ufYMW4Q"


# –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∏–∫–∞...

bot = Bot(token=API_TOKEN)

dispatcher = Dispatcher(bot)


# –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã

date = KeyboardButton ("–°—Ä–æ–∫–∏ –∏–∑–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞")

price = KeyboardButton('–¶–µ–Ω–∞')

how = KeyboardButton("–ö–∞–∫ –æ–ø–ª–∞—Ç–∏—Ç—å")

time = KeyboardButton("–í—Ä–µ–º—è –ø—Ä–∏–µ–º–∞ –∑–∞–∫–∞–∑–∞")

order = KeyboardButton("–ó–∞–∫–∞–∑–∞—Ç—å —É—Å–ª—É–≥—É")


main_menu = ReplyKeyboardMarkup(resize_keyboard=True).add(date, order, price, how, time)


btn_order = KeyboardButton('–ó–∞–∫–∞–∑–∞—Ç—å —É—Å–ª—É–≥—É')

btn_main = KeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª. –º–µ–Ω—é')


other_menu = ReplyKeyboardMarkup(resize_keyboard=True).add(btn_order, btn_main)


@dispatcher.message_handler(commands=['{–•–æ—á—É —Ä–∞–∑–æ–±–∞—Ä—Ç—å—Å—è}'])

async def start(message: types.Message):

    await bot.send_message(message.from_user.id, f"Ì†ΩÌ±ã –ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}, —è –ë–ò–ú —á–∞—Ç-–±–æ—Ç, –í–∞—à –ø–æ–º–æ—â–Ω–∏–∫ –≤ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–∞ –Ω–∞ –≤–∏–¥–µ–æ–ø–æ—Å–ª–∞–Ω–∏–µ –æ—Ç –≤–µ–¥—É—â–∏—Ö –ë–∏–º-—Ä–∞–¥–∏–æ. –ß—Ç–æ–±—ã –í—ã —Å–º–æ–≥–ª–∏ –ª–µ–≥–∫–æ –≤–æ –≤—Å–µ–º —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è - –∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É!", reply_markup=main_menu)



@dispatcher.message_handler()

async def messages(message: types.Message):

    if message.text == '–ö–∞–∫ –æ–ø–ª–∞—Ç–∏—Ç—å':

        await bot.send_message(message.from_user.id, f'Ì†ºÌæ≤ –†–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ: {randint(0, 100)}')

    elif message.text == '–°—Ä–æ–∫–∏ –∏–∑–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞':

    

        await bot.send_message(message.from_user.id, f'–ó–∞–∫–∞–∑ –±—É–¥–µ—Ç –≥–æ—Ç–æ–≤ –≤ —Ç–µ—á–µ–Ω–∏–µ 24 —á–∞—Å–æ–≤ —Å –º–æ–º–µ–Ω—Ç–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ–ø–ª–∞—Ç—ã. –í –≤—ã—Ö–æ–¥–Ω—ã–µ –∏ –ø—Ä–∞–∑–¥–Ω–∏—á–Ω—ã–µ –¥–Ω–∏ –∑–∞–∫–∞–∑—ã –Ω–µ –ø—Ä–∏–Ω–∏–º–∞—é—Ç—Å—è. –ï—Å–ª–∏ –∑–∞–∫–∞–∑ —Å–æ–≤–µ—Ä—à–∞–µ—Ç—Å—è –≤ –ø—è—Ç–Ω–∏—Ü—É –∏–ª–∏ –ø–µ—Ä–µ–¥/–≤–æ –≤—Ä–µ–º—è –≤—ã—Ö–æ–¥–Ω—ã—Ö, —Ç–æ –≤–∏–¥–µ–æ–ø–æ—Å–ª–∞–Ω–∏–µ –±—É–¥–µ—Ç –≥–æ—Ç–æ–≤–æ –≤–µ—á–µ—Ä–æ–º —Å–ª–µ–¥—É—â–µ–≥–æ —Ä–∞–±–æ—á–µ–≥–æ –¥–Ω—è.', reply_markup=other_menu)

    elif message.text == '–ó–∞–∫–∞–∑–∞—Ç—å —É—Å–ª—É–≥—É':

        markup = types.ReplyKeyboardMarkup()

        markup.add(types.KeyboardButton('–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å', web_app=WebAppInfo(url='https://forms.yandex.ru/u/64d4981deb6146039bd57a2f/')))

        await bot.send_message('–ù–∞–∂–º–∏—Ç–µ –¥–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞', reply_markup=markup)

    

    elif message.text == '–¶–µ–Ω–∞':


        await bot.send_message(message.from_user.id, '–°—Ç–æ–∏–º–æ—Å—Ç—å –≤–∏–¥–µ–æ–ø–æ—Å–ª–∞–Ω–∏—è 2900 —Ä—É–±.', reply_markup=other_menu)

    elif message.text == '–ó–∞–∫–∞–∑–∞—Ç—å —É—Å–ª—É–≥—É':

        markup = types.ReplyKeyboardMarkup()

        markup.add(types.KeyboardButton('–ó–∞–ø–∏—Å–∞—Ç—å—Å—è!', web_app=WebAppInfo(url='https://salon1c.ru/widget-org/812444535')))

        await bot.send_message(message.from_user.id, f'Ì†ΩÌ±Ω –í–∞—à–µ –∏–º—è: {message.from_user.first_name}\n\n–ë–æ—Ç —Å–æ–∑–¥–∞–Ω by Neor Ì†ΩÌ±®‚ÄçÌ†ΩÌ≤ª')

    elif message.text == '–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª. –º–µ–Ω—é':

        await bot.send_message(message.from_user.id, 'Ì†ΩÌø° –û—Ç–∫—Ä—ã–≤–∞—é –º–µ–Ω—é...', reply_markup=main_menu)

    else:

        await bot.send_message(message.from_user.id, f'Ì†ΩÌ∏ê –ë–æ—Ç–∏–∫ –≤–∞—Å –Ω–µ –ø–æ–Ω—è–ª... :(')

        



if __name__ == '__main__':

    executor.start_polling(dispatcher, skip_updates=True)
